from pathlib import Path
import os, signal

NETBOOTD_PID_PATH = Path('/var/lib/netbootfs/netbootd.pid')
NETBOOTFS_EXPORTS_PATH = Path('/etc/netbootfs/exports')

IMAGE_EXPORT_PATTERN = """\
%(image_mountpoint)s %(walt_subnet)s
"""

def generate_exports_file(root_paths, subnet):
    NETBOOTFS_EXPORTS_PATH.parent.mkdir(parents=True, exist_ok=True)
    lines = [
        "# WALT netbootfs exports: this file is automatically generated.\n",
        "# Root filesystem images\n",
    ]
    for root_path in root_paths:
        lines.append(IMAGE_EXPORT_PATTERN % dict(
                image_mountpoint=root_path,
                walt_subnet=subnet))
    NETBOOTFS_EXPORTS_PATH.write_text(''.join(lines))

def get_netbootd_pid():
    try:
        pid = int(NETBOOTD_PID_PATH.read_text())
        os.kill(pid, 0)    # signum = 0: check if process still exists
        return pid
    except:
        return None

def update_exports(root_paths, subnet):
    netbootd_pid = get_netbootd_pid()
    if netbootd_pid is None:
        # netbootd probably not installed or running
        return
    generate_exports_file(root_paths, subnet)
    # notify netbootd it should re-read its exports file
    os.kill(netbootd_pid, signal.SIGHUP)
